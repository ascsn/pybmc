[tool.poetry]
name = "pybmc"
version = "0.1.0"
description = "A package for Bayesian model combination"
authors = ["Kyle Godbey <kgodbey@utk.edu>"]
license = "GPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/ken-n-g/pybmc"
repository = "https://github.com/ken-n-g/pybmc"
documentation = "https://ascsn.github.io/pybmc/"

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^2.3.2"
scipy = "^1.15.0"
pandas = "^2.0.0"
matplotlib = "^3.7.0"
scikit-learn = "^1.3.0"
h5py = "^3.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
flake8 = "^6.0.0"
black = "^23.1.0"
isort = "^5.12.0"
mypy = "^1.0.1"
mkdocs = "^1.4.3"
mkdocs-material = "^9.6.16"
mkdocstrings-python = "^1.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_column_numbers = true
show_error_context = true

[tool.pytest.ini_options]
pythonpath = [
    "pybmc"
]
testpaths = [
    "tests"
]
markers = [
    "e2e: end-to-end tests"
]
addopts = "--cov=pybmc --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
omit = [
    "pybmc/test.py",
    "pybmc/test_*.py",
    "tests/*"
]

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:"
]
