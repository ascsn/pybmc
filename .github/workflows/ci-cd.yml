name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: pipx install poetry
    - name: Install dependencies
      run: poetry install --with ci
    - name: Run tests
      run: poetry run pytest
    - name: Lint
      run: poetry run flake8 pybmc tests
    - name: Install pandas stubs
      run: python3 -m pip install pandas-stubs
    - name: Type check
      run: poetry run mypy pybmc
    - name: Format check
      run: poetry run black --check pybmc tests
    - name: Security scan
      run: poetry run bandit -r pybmc

  docs:
    needs: test-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        pipx install poetry
        poetry install --with docs
    - name: Build docs
      run: poetry run mkdocs build
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

  deploy:
    needs: [test-lint, docs]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    - name: Install Poetry
      run: pipx install poetry
    - name: Configure Poetry
      run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
    - name: Build package
      run: poetry build
    - name: Publish to PyPI
      run: poetry publish
